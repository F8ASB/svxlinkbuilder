Having made the OS Card with Bookworm Lite on the Raspberry Pi Writer. Ensure SSH and Wifi is set if required.
1.issue command at the prompt No sudo
./svxlinkbuilder/preinstall.sh
Initialise #### Need to check the Variable Library
check_os  #### ensures that the OS is Bookworm.
usercheck #### ensures that the user is pi.
SwapFileChange - Makes a bigger swap file not that it seems to make much difference
install Install.log #### This is the log file for the install script.
SoundcardManipulation - Removes the onboard soundcard, making the USBCard : 0
Fix Alsactl #### Fixes the alsactl state-daemone file
Loads everything and runs the services.
Install Repository Key #### Adds the key to the repository
Install Repository #### Adds the repository
Update/Upgrade ####   Standard methods + Build essentials
Install Essentials and svxlink-server #### 
Install Locale #### just en_GB at this time

Reboot for first pass ####

2.Login and issue command at the prompt - No sudo
./svxlinkbuilder/install.sh
initialise #### Need to check the Variable Library
which_language #### User selects Language options from the list

3.install_main.sh - Language versions.
language confirmed #### $lang is set
welcome #### In the users language
configure #### Reads the config.txt
nodeoption #### Select the node type
soundcard #### set the soundcard options
callsign #### set the node RF callsign
make_groups #### probably set by svxlink_server
voiceinstall #### Depending on $lang
node_type #### In the users language Simp/Duplex Reflector/None
sound_card_setup #### Modified / Unmodified / Other
update upgrade #### Standard methods + Build essentials
callsign #### User enters intended RF callsign
groups #### OS Groups updated for svxlink etc.
source #### Clones the git files
compile #### Standard cmake line for compiling and installing
voices #### Voice files installed language compliant.
svx_modifs #### Import of svxlink .conf files from stock
           #### /etc/default/svxlink modified for .log 
           #### Splash screen modifier
dashboard  #### sudo git clone Dashboard direct to /var/www/html
           #### User sets up Dashboard user and password for edit purposes 
ip_addresses #### check and verify ip addresses.
node_setup #### all the node parameters
ModuleMetar #### Standard for the UK Needs modifying for User
ModuleEchoLink #### Yes or No for user.
Services Started #### This is where the fun begins.
Reboot
Revert to Dashboard operations for further edits.
